{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rock/Desktop/react_project03/src/component/main.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initView: true,\n      loading: false,\n      users: null,\n      errorMsg: null\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const {\n      searchName\n    } = newProps; //更新狀態(請求)\n\n    this.setState({\n      initView: false,\n      loading: true\n    }); //發起ajax請求\n\n    const url = `https://api.github.com/search/users?q=${searchName}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n      console.log(result);\n      const users = result.items.map(item => {\n        return {\n          name: item.login,\n          url: item.html_url,\n          avatarUrl: item.avatar_url\n        };\n      });\n      this.setState({\n        loading: false,\n        users\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        errorMsg: error.message\n      });\n    });\n  }\n\n  render() {\n    const {\n      initView,\n      loading,\n      users,\n      errorMsg\n    } = this.state;\n    const {\n      searchName\n    } = this.props;\n\n    if (initView) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Enter name to Search!!!\", searchName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    } else if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6B63\\u5728\\u641C\\u7D22\\u4E2D\\uFF01\\uFF01\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    } else if (errorMsg) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: user.url,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatarUrl,\n              style: {\n                width: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\nMain.propTypes = {\n  searchName: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/rock/Desktop/react_project03/src/component/main.jsx"],"names":["React","Component","PropTypes","axios","Main","state","initView","loading","users","errorMsg","componentWillReceiveProps","newProps","searchName","setState","url","get","then","response","result","data","console","log","items","map","item","name","login","html_url","avatarUrl","avatar_url","catch","error","message","render","props","user","index","width","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React ,{Component} from \"react\";\nimport PropTypes from 'prop-types'\nimport axios from \"axios\";\nexport default class Main extends  Component{\n\n    static propTypes ={\n      searchName : PropTypes.string.isRequired\n    }\n\n    state = {\n        initView : true ,\n        loading : false ,\n        users : null ,\n        errorMsg : null\n    }\n\n    componentWillReceiveProps(newProps) {\n        const {searchName} = newProps\n        //更新狀態(請求)\n        this.setState({\n            initView : false ,\n            loading : true\n        })\n        //發起ajax請求\n        const url = `https://api.github.com/search/users?q=${searchName}`\n        axios.get(url)\n            .then(response =>{\n                const result = response.data\n                console.log(result)\n                const users = result.items.map(item =>{\n                    return {name : item.login , url : item.html_url ,avatarUrl : item.avatar_url }\n                })\n                this.setState({loading : false , users})\n                })\n\n            .catch(error =>{\n                    this.setState({loading : false , errorMsg:error.message})\n            })\n    }\n\n    render() {\n        const {initView , loading , users , errorMsg} = this.state\n        const {searchName} = this.props\n        if(initView){\n            return <h2>Enter name to Search!!!{searchName}</h2>\n        }\n        else if(loading){\n            return  <h2>正在搜索中！！！</h2>\n        }\n        else if(errorMsg){\n            return <h2>{errorMsg}</h2>\n        }\n        else{\n            return(\n                <div className=\"row\">\n                    {\n                        users.map((user , index) =>(\n\n                            <div className = \"card\">\n                                <a href={user.url} >\n                                    <img src={user.avatarUrl} style={{width : 100}}/>\n                                </a>\n                                <p className = \"card-text\">{user.name}</p>\n                            </div>\n                        ))\n                    }\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}